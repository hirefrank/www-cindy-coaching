---
import Layout from '../layouts/Layout.astro';
import CalButton from '../components/CalButton';
import { getGlobalSettings, getServicesContent } from '../lib/cosmic';

// Helper function to decode HTML entities
const decodeHTMLEntities = (text: string) => {
    // Server-side safe decoding
    return text
        .replace(/&nbsp;/g, ' ')
        .replace(/&quot;/g, '"')
        .replace(/&#39;/g, "'")
        .replace(/&lt;/g, '<')
        .replace(/&gt;/g, '>')
        .replace(/&amp;/g, '&');
};

// Fetch content from Cosmic
const globalSettings = await getGlobalSettings();
const servicesData = await getServicesContent();

// Extract content with fallbacks
const headline = decodeHTMLEntities(servicesData?.metadata?.headline || "Comprehensive ADHD Coaching Services");
const description = decodeHTMLEntities(servicesData?.metadata?.description || "Bridging brain science with practical strategies to support neurodiverse individuals, families, and organizations through evidence-based coaching approaches.");

// Individuals section (Parents & Families)
const individualsHeader = decodeHTMLEntities(servicesData?.metadata?.individuals?.header || "For Parents & Families");
const individualsDescription = decodeHTMLEntities(servicesData?.metadata?.individuals?.description || "");
const individualsContent = servicesData?.metadata?.individuals?.content || [];

// Groups section (Organizations)
const groupsHeader = decodeHTMLEntities(servicesData?.metadata?.groups?.header || "For Organizations & Professionals");
const groupsDescription = decodeHTMLEntities(servicesData?.metadata?.groups?.description || "");
const groupsContent = servicesData?.metadata?.groups?.content || [];

// Extract calendar links with fallbacks
const calendarLinks = {
    consultation: globalSettings?.metadata?.calendar_links?.free_consultation || "cindy-romanzo/consultation",
    officeHours: globalSettings?.metadata?.calendar_links?.office_hours || "cindy-romanzo/office-hours"
};

// Helper function to extract cal.com slug from full URL
const getCalSlug = (url: string) => {
    if (url.includes('cal.com/')) {
        return url.split('cal.com/')[1];
    }
    return url;
};

// Helper function to extract bullet points from HTML
const extractBulletPoints = (html: string) => {
    // Match all <p> tags that contain bullet points
    const bulletRegex = /<p[^>]*>&bull;\s*([^<]+)<\/p>/g;
    const bullets = [];
    let match;
    while ((match = bulletRegex.exec(html)) !== null) {
        bullets.push(decodeHTMLEntities(match[1].trim()));
    }
    return bullets;
};

// Helper function to extract main description from HTML
const extractMainDescription = (html: string) => {
    // Find the first <p> tag with id="isPasted" which seems to contain the main description
    let match = html.match(/<p[^>]*id="isPasted"[^>]*>([^<]+)<\/p>/);
    if (match && match[1].trim()) {
        return decodeHTMLEntities(match[1].trim());
    }
    
    // If no isPasted, look for first <p> without bullet points
    match = html.match(/<p[^>]*>(?!.*&bull;)([^<]+)<\/p>/);
    if (match && match[1].trim()) {
        return decodeHTMLEntities(match[1].trim());
    }
    
    return '';
};
---

<Layout title="Services - Mindful Balance ADHD Coaching">
  <!-- Hero Section -->
  <section class="section-padding bg-gradient-to-b from-muted/30 to-background">
    <div class="max-w-4xl mx-auto container-padding text-center">
      <h1 class="mb-24">{headline}</h1>
      <p class="text-xl text-muted-foreground leading-relaxed">
        {description}
      </p>
    </div>
  </section>

  <!-- For Parents & Families -->
  <section class="py-48">
    <div class="max-w-6xl mx-auto container-padding">
      <div class="text-center mb-64">
        <h2 class="mb-24">{individualsHeader}</h2>
        <p class="text-xl text-muted-foreground max-w-3xl mx-auto">
          {individualsDescription}
        </p>
      </div>
      
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-32 max-w-4xl mx-auto">
        {individualsContent.map((service: any) => {
          const mainDescription = extractMainDescription(service.description);
          const bulletPoints = extractBulletPoints(service.description);
          
          return (
            <div class="card hover:shadow-lg transition-shadow duration-300 flex flex-col h-full">
              <div class="card-content p-32 flex flex-col flex-grow">
                <h3 class="mb-16">{decodeHTMLEntities(service.title)}</h3>
                <p class="text-muted-foreground mb-24 leading-relaxed">
                  {mainDescription}
                </p>
                {bulletPoints.length > 0 && (
                  <div class="space-y-8 text-sm text-muted-foreground mb-24 flex-grow">
                    {bulletPoints.map((bullet: string) => (
                      <p>• {bullet}</p>
                    ))}
                  </div>
                )}
                <div class="mt-auto">
                  <CalButton 
                    calLink={getCalSlug(calendarLinks.consultation)}
                    className="btn-primary w-full"
                    namespace="services-consultation"
                    client:load
                  >
                    Schedule Consultation
                  </CalButton>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>


  <!-- For Organizations -->
  <section id="organizations" class="py-48">
    <div class="max-w-6xl mx-auto container-padding">
      <div class="text-center mb-64">
        <h2 class="mb-24">{groupsHeader}</h2>
        <p class="text-xl text-muted-foreground max-w-3xl mx-auto">
          {groupsDescription}
        </p>
      </div>
      
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-32">
        {groupsContent.map((service: any, index: number) => {
          const mainDescription = extractMainDescription(service.description);
          const bulletPoints = extractBulletPoints(service.description);
          const isOfficeHours = service.title.includes('Office Hours');
          
          return (
            <div class="card hover:shadow-lg transition-shadow duration-300 flex flex-col h-full">
              <div class="card-content p-32 flex flex-col flex-grow">
                <h3 class="mb-16">{decodeHTMLEntities(service.title)}</h3>
                <p class="text-muted-foreground mb-24 leading-relaxed">
                  {mainDescription}
                </p>
                {bulletPoints.length > 0 && (
                  <div class="space-y-8 text-sm text-muted-foreground mb-24 flex-grow">
                    {bulletPoints.map((bullet: string) => (
                      <p>• {bullet}</p>
                    ))}
                  </div>
                )}
                <div class="mt-auto">
                  <CalButton 
                    calLink={getCalSlug(isOfficeHours ? calendarLinks.officeHours : calendarLinks.consultation)}
                    className="btn-primary w-full"
                    namespace={isOfficeHours ? "office-hours" : "services-consultation"}
                    client:load
                  >
                    {isOfficeHours ? "Schedule Office Hours" : "Schedule Consultation"}
                  </CalButton>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>

</Layout>
